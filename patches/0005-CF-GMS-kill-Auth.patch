From 0d4b951d7de0b28b818a752ba1f9dad69fcbe424 Mon Sep 17 00:00:00 2001
From: thermatk <thermatk@thermatk.com>
Date: Fri, 22 Jun 2018 17:06:15 +0200
Subject: [PATCH 05/21] [CF][GMS] kill Auth

---
 .../chrome/browser/signin/SigninHelper.java       |  6 ++----
 .../components/signin/AccountIdProvider.java      |  9 +--------
 .../signin/SystemAccountManagerDelegate.java      | 15 +++++++++------
 3 files changed, 12 insertions(+), 18 deletions(-)

diff --git a/chrome/android/java/src/org/chromium/chrome/browser/signin/SigninHelper.java b/chrome/android/java/src/org/chromium/chrome/browser/signin/SigninHelper.java
index 772174a558..659c3a3408 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/signin/SigninHelper.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/signin/SigninHelper.java
@@ -9,10 +9,6 @@ import android.annotation.SuppressLint;
 import android.content.Context;
 import android.os.AsyncTask;
 
-import com.google.android.gms.auth.AccountChangeEvent;
-import com.google.android.gms.auth.GoogleAuthException;
-import com.google.android.gms.auth.GoogleAuthUtil;
-
 import org.chromium.base.ContextUtils;
 import org.chromium.base.Log;
 import org.chromium.base.VisibleForTesting;
@@ -71,6 +67,7 @@ public class SigninHelper {
         @Override
         public List<String> getAccountChangeEvents(
                 Context context, int index, String accountName) {
+            /*
             try {
                 List<AccountChangeEvent> list = GoogleAuthUtil.getAccountChangeEvents(
                         context, index, accountName);
@@ -88,6 +85,7 @@ public class SigninHelper {
             } catch (GoogleAuthException e) {
                 Log.w(TAG, "Failed to get change events", e);
             }
+            */
             return new ArrayList<>(0);
         }
     }
diff --git a/components/signin/core/browser/android/java/src/org/chromium/components/signin/AccountIdProvider.java b/components/signin/core/browser/android/java/src/org/chromium/components/signin/AccountIdProvider.java
index 192ea3184e..1c01bd6611 100644
--- a/components/signin/core/browser/android/java/src/org/chromium/components/signin/AccountIdProvider.java
+++ b/components/signin/core/browser/android/java/src/org/chromium/components/signin/AccountIdProvider.java
@@ -4,8 +4,6 @@
 
 package org.chromium.components.signin;
 
-import com.google.android.gms.auth.GoogleAuthException;
-import com.google.android.gms.auth.GoogleAuthUtil;
 import com.google.android.gms.common.ConnectionResult;
 import com.google.android.gms.common.GoogleApiAvailability;
 
@@ -40,12 +38,7 @@ public class AccountIdProvider {
      * @param accountName The email address of a Google account.
      */
     public String getAccountId(String accountName) {
-        try {
-            return GoogleAuthUtil.getAccountId(ContextUtils.getApplicationContext(), accountName);
-        } catch (IOException | GoogleAuthException ex) {
-            Log.e("cr.AccountIdProvider", "AccountIdProvider.getAccountId", ex);
-            return null;
-        }
+        return null;
     }
 
     /**
diff --git a/components/signin/core/browser/android/java/src/org/chromium/components/signin/SystemAccountManagerDelegate.java b/components/signin/core/browser/android/java/src/org/chromium/components/signin/SystemAccountManagerDelegate.java
index 4604ac1a50..db809038c9 100644
--- a/components/signin/core/browser/android/java/src/org/chromium/components/signin/SystemAccountManagerDelegate.java
+++ b/components/signin/core/browser/android/java/src/org/chromium/components/signin/SystemAccountManagerDelegate.java
@@ -23,9 +23,6 @@ import android.os.PatternMatcher;
 import android.os.Process;
 import android.os.SystemClock;
 
-import com.google.android.gms.auth.GoogleAuthException;
-import com.google.android.gms.auth.GoogleAuthUtil;
-import com.google.android.gms.auth.GooglePlayServicesAvailabilityException;
 import com.google.android.gms.common.ConnectionResult;
 import com.google.android.gms.common.GoogleApiAvailability;
 
@@ -116,9 +113,9 @@ public class SystemAccountManagerDelegate implements AccountManagerDelegate {
         // so don't report any accounts if Google Play Services are out of date.
         checkCanUseGooglePlayServices();
 
-        if (!hasGetAccountsPermission()) {
-            return new Account[] {};
-        }
+        return new Account[] {};
+
+        /*
         long now = SystemClock.elapsedRealtime();
         Account[] accounts = mAccountManager.getAccountsByType(GoogleAuthUtil.GOOGLE_ACCOUNT_TYPE);
         long elapsed = SystemClock.elapsedRealtime() - now;
@@ -128,12 +125,15 @@ public class SystemAccountManagerDelegate implements AccountManagerDelegate {
                     "Signin.AndroidGetAccountsTimeUiThread_AccountManager", elapsed);
         }
         return accounts;
+        */
     }
 
     @Override
     public String getAuthToken(Account account, String authTokenScope) throws AuthException {
         assert !ThreadUtils.runningOnUiThread();
         assert AccountManagerFacade.GOOGLE_ACCOUNT_TYPE.equals(account.type);
+        return null;
+        /*
         try {
             return GoogleAuthUtil.getTokenWithNotification(
                     ContextUtils.getApplicationContext(), account, authTokenScope, null);
@@ -145,10 +145,12 @@ public class SystemAccountManagerDelegate implements AccountManagerDelegate {
         } catch (IOException ex) {
             throw new AuthException(AuthException.TRANSIENT, ex);
         }
+        */
     }
 
     @Override
     public void invalidateAuthToken(String authToken) throws AuthException {
+        /*
         try {
             GoogleAuthUtil.clearToken(ContextUtils.getApplicationContext(), authToken);
         } catch (GooglePlayServicesAvailabilityException ex) {
@@ -158,6 +160,7 @@ public class SystemAccountManagerDelegate implements AccountManagerDelegate {
         } catch (IOException ex) {
             throw new AuthException(AuthException.TRANSIENT, ex);
         }
+        */
     }
 
     @Override
-- 
2.17.1

